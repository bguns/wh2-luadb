name: wh2-luadb
version: "1.0"
about: Converts Total War Warhammer 2 DB to Lua representations, using RPFM for intermediary steps (extracting etc.)
args:
    - packfile: 
        short: p
        long: packfile
        value_name: PACKFILE
        about: Select a packfile from which to extract db files as lua tables. If output directory is not specified, will output to a folder with the same name as the packfile.
        takes_value: true
        conflicts_with: input-directory
    - input-directory:
        short: i
        long: indir
        value_name: DIRECTORY
        about: Select a directory to (recursively) scan for extracted db files to convert to lua tables. If output directory is not specified, will output lua files to the same folder as the db files.
        takes_value: true
    - output-directory:
        short: o
        long: outdir
        value_name: DIRECTORY
        about: The directory to output the converted lua files to.
        takes_value: true
    - script-check: 
        short: s
        long: script-check
        value_name: SCRIPT_NAME
        about: The (relative) path to a script file on the VFS. If provided, the resulting lua scripts will only return data if the given script file exists. This can be used as a way to check if a certain mod is loaded.
        takes_value: true
    - core-prefix:
        long: core-prefix
        value_name: PREFIX
        about: If data__ (core) tables are found, the resulting filename in the "mod_core" folder will be <PREFIX>_data__.lua. Combined with a script-check, this allows for proper conditional loading of the correct core data__ file based on which mods are actually loaded. This option can be omitted when a packfile is targetted, in which case the packfile's name will be prefixed instead.
        takes_value: true
    - base-data:
        long: base
        about: If this option is used, any data__ tables found will not be prefixed and will be placed in the "core" folder. This should only be used for processing base game data, or base compatibility data for large overhaul mods.
        conflicts_with: core-prefix
    - force:
        long: force
        about: Normally, in order to ensure clean and correct output, this tool expects the output directory to be empty, and will not continue if this is not so. Setting the --force flag ignores this check, which will simply add resulting files in the proper directories, overwriting them if necessary. Only use this if you know what you're doing.
    - unpacked:
        short: u
        long: unpacked
        about: By default, the resulting script files will be placed in a (movie) .pack file in the output directory. Use this flag to have output the script files directly to the output directory instead.
    - game:
        short: g
        long: game
        value_name: SUPPORTED_GAME
        takes_value: true
        hidden: true